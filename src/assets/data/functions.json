{
  "add_days": {
    "title": "ADD_DAYS",
    "description": "Returns a datetime that is the indicated number of days before or after a specified date or datetime.",
    "syntax": "ADD_DAYS(date/datetime, num) -> Datetime",
    "parameters": [
      {
        "name": "date/datetime",
        "type": "Date/Datetime",
        "required": "Yes",
        "description": "The input date or datetime."
      },
      {
        "name": "num",
        "type": "Integer",
        "required": "Yes",
        "description": "The number of days to add (use a negative value to subtract days)."
      }
    ],
    "examples": [
      "ADD_DAYS(DATE('2024-8-1'), 3)\n-- Returns 2024-08-04",
      "ADD_DAYS('2024-08-30', 3)\n-- Returns 2024-09-02",
      "ADD_DAYS(TO_DATETIME('2024-08-30 08:30:00.002'), 2)\n-- Returns 2024-09-01"
    ],
    "tips": [
      "When you pass a Date as the first parameter, the function returns a Date value.",
      "When used in a Datetime field, it will store that in a Datetime field."
    ],
    "relatedFormulas": ["TO_DATE", "TO_DATETIME"]
  },

    "agg_count_distinct": {
      "title": "AGG_COUNT_DISTINCT",
      "description": "Returns the count of distinct non-null values of a specified field from an aggregate object. The function also allows you to designate additional fields for grouping and filtering based on corresponding values from the source object.",
      "syntax": "AGG_COUNT_DISTINCT(aggregate_object, target_field_name, group_field_n, filter_field_n, filter_value_n, ...) -> Number",
      "parameters": [
        {
          "name": "aggregate_object",
          "type": "Object reference",
          "required": "Yes",
          "description": "The name of the source object for aggregation."
        },
        {
          "name": "target_field_name",
          "type": "String",
          "required": "Yes",
          "description": "The field from the source object whose distinct non-null values are counted."
        },
        {
          "name": "group_field_n",
          "type": "String",
          "required": "Optional",
          "description": "A field from the source object that can be used to group results. This parameter can be repeated multiple times for multiple grouping fields."
        },
        {
          "name": "filter_field_n",
          "type": "String",
          "required": "Optional",
          "description": "The field from the source object used to filter results. This parameter can be repeated multiple times for multiple filters."
        },
        {
          "name": "filter_value_n",
          "type": "Any",
          "required": "Optional",
          "description": "The value to filter on for the corresponding filter_field_n."
        }
      ],
      "examples": [
        "AGG_COUNT_DISTINCT(\n  \"Opportunity\",\n  \"Type\",\n  \"AccountId\",\n  \"StageName\",\n  \"Closed Won\"\n)\n\n-- Calculates the count of distinct non-null 'Type' values from Opportunity records, grouped by AccountId, where StageName is 'Closed Won' and AccountId matches Account Data.\n\n-- During runtime, DSP generates the following SOQL query:\nSELECT AccountId, COUNT_DISTINCT(Type) agg0\nFROM Opportunity\nWHERE (AccountId IN ('0018k00000B1pVXAAZ','0018k00000B1pVZAAZ'))\nAND StageName = 'Closed Won'\nGROUP BY AccountId",
        "AGG_COUNT_DISTINCT(\n  \"Opportunity\",\n  \"Type\",\n  \"AccountId\",\n  \"OwnerId\",\n  \"StageName\",\n  \"Closed Won\"\n)\n\n-- Calculates the count of distinct non-null 'Type' values from Opportunity records, grouped by AccountId and OwnerId, where StageName is 'Closed Won' and AccountId matches Account Data.\n\n-- During runtime, DSP generates the following SOQL query:\nSELECT AccountId, OwnerId, COUNT_DISTINCT(Type) agg0\nFROM Opportunity\nWHERE (AccountId IN ('0018k00000B1pVZAAZ','0018k00000B1pViAAZ','0055D00000Pi7cTAAR'))\nAND StageName = 'Closed Won'\nGROUP BY AccountId, OwnerId"
      ],
      "tips": [
        "Aggregation General"
      ]
    }
}
